@startuml

class Category {
  - id: int
  - name: String

}

class Car {
  - id: int
  - object_id: String
  - model: String
  - brand: String
  - year: int
}

class CarCategory {
  - id: int
  - car_id: int
  - category_id: int
}

interface CategoryRepository {
  + findByName(): Optional<Category>
}

interface CarRepository {
  + findByBrand(brand: String): List<Car>
  + findByObjectId(objectId: String): Optional<Car>
  + deleteByObjectId(car: Car): Car
  + deleteById(objectId: Long): void
  + findByBrandAndModel(brand: String , model: String , pageable: Pageable , sort: Sort ): boolean
}

class CarController {
  - carService: CarService

  + getAll(): List<Car>
  + getCarByObjectId(objectId: String): Optional<Car>
  + getCarsByBrand(brand: String): List<Car>
  + getCarsByBrandAndModel(brand: String, model: String, page: int, size: int, sortOrder: String): List<Car>
  + getCarsByBrandAndModelAndYear(brand: String, model: String, year: Year): List<Car>
  + getCarsByBrandAndModelAndMinYearAndMaxYear(brand: String, model: String, minYear: Year, maxYear: Year): List<Car>
  + add(brand: String, model: String, year: Year, categoriesNames: String[]): Car
  + delete(objectId: String): void
}

class CategoryService {
  - categoryRepository: CategoryRepository

  + findByName(name: String): Optional<Category>
}

class CarService {
  - carRepository: CarRepository
  - categoryService: CategoryService

  + getAll(): List<Car>
  + getByObjectId(objectId: String): Optional<Car>
  + getByBrand(brand: String): List<Car>
  + getByBrandAndModel(brand: String, model: String, page: int, size: int, sortOrder: String): List<Car>
  + getByBrandAndModelAndYear(brand: String, model: String, year: Year): List<Car>
  + getByBrandAndModelAndMinYearAndMaxYear(brand: String, model: String, minYear: Year, maxYear: Year): List<Car>
  + addCar(brand: String, model: String, year: Year, categoriesNames: String[]): Car
  + deleteByObjectId(objectId: String): void
}

CarController -- CarService
CarService -- CarRepository
CarService -- CategoryService
CategoryService -- CategoryRepository

Category -- CarCategory
Car -- CarCategory

@enduml
